/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import PersistanceEntities.DataFecha;
import PersistanceEntities.DataPersProds;
import PersistanceEntities.DataPersistencia;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JDesktopPane;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import publicar.DataPedido;
import publicar.DataProducto;
import publicar.DataRestaurante;
import publicar.Estado;
import publicar.PublicadorMovil;
import publicar.PublicadorMovilService;

/**
 *
 * @author Marcelo
 */

public class InicioSesion extends javax.swing.JInternalFrame {

    /**
     * Creates new form InicioSesion
     */
    public InicioSesion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Contraseña = new javax.swing.JTextField();
        Restaurante = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setBackground(new java.awt.Color(255, 255, 255));

        Contraseña.setToolTipText("Contraseña");
        Contraseña.setName("Contraseña"); // NOI18N
        Contraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContraseñaActionPerformed(evt);
            }
        });

        Restaurante.setToolTipText("");
        Restaurante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestauranteActionPerformed(evt);
            }
        });

        jButton1.setText("Iniciar Sesión");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Contraseña:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Restaurante:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(Contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Restaurante, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap(65, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Restaurante, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(139, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ContraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContraseñaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ContraseñaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String rest = Restaurante.getText();
        String contra = Contraseña.getText();

        try{
            PublicadorMovilService service = new PublicadorMovilService(Main.cargarURL());
            PublicadorMovil port = service.getPublicadorMovilPort();
            if (!port.existeRestaurante(rest))
                JOptionPane.showMessageDialog(null, "Nick o Email incorrecto, intentelo de nuevo");
            else{
                DataRestaurante dr = port.getRestaurante(rest);
                if(!contra.equals(dr.getContrasenia()))
                    JOptionPane.showMessageDialog(null, "Contraseña incorrecta, intentelo de nuevo");
                else{
                    port.setRestoLogueado(rest);
                    JDesktopPane esc = (JDesktopPane) this.getParent();
                    this.dispose();
                    Menu men = new Menu();
                    esc.add(men);
                    men.setVisible(true);
                    
                    EntityManagerFactory emf = Persistence.createEntityManagerFactory("MovilPU");
                    EntityManager em = emf.createEntityManager();
                    
                    try{
                        List <DataPedido> pedidos = port.getPedidos().getItem();
                        List <DataPersistencia> peds = em.createQuery("SELECT a FROM DataPersistencia a").getResultList();
                        
                        if (!peds.isEmpty()){
                            em.getTransaction().begin();
                            Query qu = em.createQuery("DELETE FROM DataPersistencia");
                            qu.executeUpdate();
                            em.getTransaction().commit();
                            
                            List <DataPersProds> prods = em.createQuery("SELECT a FROM DataPersProds a").getResultList();
                        
                            if(!prods.isEmpty()){
                                em.getTransaction().begin();
                                Query qu2 = em.createQuery("DELETE FROM DataPersProds");
                                qu2.executeUpdate();
                                em.getTransaction().commit();
                            }
                        }    
                        for (DataPedido dp : pedidos){
                            DataPersistencia dps = new DataPersistencia();
                            dps.setIdP(dp.getIdP());
                            dps.setDirCliente(dp.getDirCliente());
                            dps.setEstado(dp.getEstado().toString());
                            if(dp.getEstado().toString().equals(Estado.PREPARACION.toString())){
                                dps.setFechaPreparacion(new DataFecha(dp.getEstados().get(0).getAnio(), dp.getEstados().get(0).getMes(),
                                        dp.getEstados().get(0).getDia(), dp.getEstados().get(0).getHora(), dp.getEstados().get(0).getMinuto()).toString());
                            }else if(dp.getEstado() == (Estado.ENVIADO)){
                                dps.setFechaPreparacion(new DataFecha(dp.getEstados().get(0).getAnio(), dp.getEstados().get(0).getMes(),
                                        dp.getEstados().get(0).getDia(), dp.getEstados().get(0).getHora(), dp.getEstados().get(0).getMinuto()).toString());
                                dps.setFechaPreparacion(new DataFecha(dp.getEstados().get(0).getAnio(), dp.getEstados().get(0).getMes(),
                                        dp.getEstados().get(0).getDia(), dp.getEstados().get(0).getHora(), dp.getEstados().get(0).getMinuto()).toString());
                            }else{
                                dps.setFechaRecibido(new DataFecha(dp.getEstados().get(2).getAnio(), dp.getEstados().get(2).getMes(),
                                        dp.getEstados().get(2).getDia(), dp.getEstados().get(2).getHora(), dp.getEstados().get(2).getMinuto()).toString());
                                dps.setFechaPreparacion(new DataFecha(dp.getEstados().get(0).getAnio(), dp.getEstados().get(0).getMes(),
                                        dp.getEstados().get(0).getDia(), dp.getEstados().get(0).getHora(), dp.getEstados().get(0).getMinuto()).toString());
                                dps.setFechaPreparacion(new DataFecha(dp.getEstados().get(0).getAnio(), dp.getEstados().get(0).getMes(),
                                        dp.getEstados().get(0).getDia(), dp.getEstados().get(0).getHora(), dp.getEstados().get(0).getMinuto()).toString());
                            }
                            dps.setNickCliente(dp.getNickCli());
                            dps.setPrecioTotal(dp.getPrecioT());

                            em.getTransaction().begin();
                            em.persist(dps);
                            em.getTransaction().commit();


                            List <DataProducto> productos = dp.getProductos();

                            for(DataProducto dprod : productos){
                                DataPersProds dpp = new DataPersProds();
                                dpp.setCantidad(dprod.getCantidad());
                                dpp.setNombre(dprod.getNombre());
                                dpp.setPedido(dp.getIdP());
                                dpp.setPrecioU(dprod.getPrecio());
                                dpp.setSubTotal(dprod.getPrecio()*dprod.getCantidad());
                                if(dprod.getTipo() == 0)
                                    dpp.setTipo("Individual");
                                else
                                    dpp.setTipo("Promocion");
                                
                                em.getTransaction().begin();
                                em.persist(dpp);
                                em.getTransaction().commit();

                            }
                        }
                    }catch (Exception e) {
                        e.printStackTrace();
                        em.getTransaction().rollback();
                    }finally{
                        em.close();
                        emf.close();
                    }
                }
            }
        }catch(Exception e){
            System.out.print(e.getMessage());
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("MovilPU");
            EntityManager em = emf.createEntityManager();
            List <DataPersistencia> ress = em.createQuery("SELECT a FROM DataPersistencia a").getResultList();
            
            if(ress.isEmpty()){
                JOptionPane.showMessageDialog(null, "Debe ingresar por lo menos una vez con conexion");
            }else{
                JDesktopPane esc = (JDesktopPane) this.getParent();
                this.dispose();
                Menu men = new Menu();
                esc.add(men);
                men.setVisible(true);
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void RestauranteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestauranteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RestauranteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Contraseña;
    private javax.swing.JTextField Restaurante;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
